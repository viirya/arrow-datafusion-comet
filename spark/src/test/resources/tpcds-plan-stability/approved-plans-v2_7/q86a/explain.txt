== Physical Plan ==
TakeOrderedAndProject (36)
+- * Project (35)
   +- Window (34)
      +- * ColumnarToRow (33)
         +- CometSort (32)
            +- CometColumnarExchange (31)
               +- CometHashAggregate (30)
                  +- CometColumnarExchange (29)
                     +- CometHashAggregate (28)
                        +- CometUnion (27)
                           :- CometHashAggregate (16)
                           :  +- CometColumnarExchange (15)
                           :     +- RowToColumnar (14)
                           :        +- * HashAggregate (13)
                           :           +- * Project (12)
                           :              +- * BroadcastHashJoin Inner BuildRight (11)
                           :                 :- * Project (6)
                           :                 :  +- * BroadcastHashJoin Inner BuildRight (5)
                           :                 :     :- * ColumnarToRow (3)
                           :                 :     :  +- CometFilter (2)
                           :                 :     :     +- CometScan parquet spark_catalog.default.web_sales (1)
                           :                 :     +- ReusedExchange (4)
                           :                 +- BroadcastExchange (10)
                           :                    +- * ColumnarToRow (9)
                           :                       +- CometFilter (8)
                           :                          +- CometScan parquet spark_catalog.default.item (7)
                           :- CometHashAggregate (21)
                           :  +- CometColumnarExchange (20)
                           :     +- CometHashAggregate (19)
                           :        +- CometHashAggregate (18)
                           :           +- ReusedExchange (17)
                           +- CometHashAggregate (26)
                              +- CometColumnarExchange (25)
                                 +- CometHashAggregate (24)
                                    +- CometHashAggregate (23)
                                       +- ReusedExchange (22)


(unknown) Scan parquet spark_catalog.default.web_sales
Output [3]: [ws_item_sk#1, ws_net_paid#2, ws_sold_date_sk#3]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ws_sold_date_sk#3), dynamicpruningexpression(ws_sold_date_sk#3 IN dynamicpruning#4)]
PushedFilters: [IsNotNull(ws_item_sk)]
ReadSchema: struct<ws_item_sk:int,ws_net_paid:decimal(7,2)>

(2) CometFilter
Input [3]: [ws_item_sk#1, ws_net_paid#2, ws_sold_date_sk#3]
Condition : isnotnull(ws_item_sk#1)

(3) ColumnarToRow [codegen id : 3]
Input [3]: [ws_item_sk#1, ws_net_paid#2, ws_sold_date_sk#3]

(4) ReusedExchange [Reuses operator id: 41]
Output [1]: [d_date_sk#5]

(5) BroadcastHashJoin [codegen id : 3]
Left keys [1]: [ws_sold_date_sk#3]
Right keys [1]: [d_date_sk#5]
Join type: Inner
Join condition: None

(6) Project [codegen id : 3]
Output [2]: [ws_item_sk#1, ws_net_paid#2]
Input [4]: [ws_item_sk#1, ws_net_paid#2, ws_sold_date_sk#3, d_date_sk#5]

(unknown) Scan parquet spark_catalog.default.item
Output [3]: [i_item_sk#6, i_class#7, i_category#8]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_class:string,i_category:string>

(8) CometFilter
Input [3]: [i_item_sk#6, i_class#7, i_category#8]
Condition : isnotnull(i_item_sk#6)

(9) ColumnarToRow [codegen id : 2]
Input [3]: [i_item_sk#6, i_class#7, i_category#8]

(10) BroadcastExchange
Input [3]: [i_item_sk#6, i_class#7, i_category#8]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1]

(11) BroadcastHashJoin [codegen id : 3]
Left keys [1]: [ws_item_sk#1]
Right keys [1]: [i_item_sk#6]
Join type: Inner
Join condition: None

(12) Project [codegen id : 3]
Output [3]: [ws_net_paid#2, i_class#7, i_category#8]
Input [5]: [ws_item_sk#1, ws_net_paid#2, i_item_sk#6, i_class#7, i_category#8]

(13) HashAggregate [codegen id : 3]
Input [3]: [ws_net_paid#2, i_class#7, i_category#8]
Keys [2]: [i_category#8, i_class#7]
Functions [1]: [partial_sum(UnscaledValue(ws_net_paid#2))]
Aggregate Attributes [1]: [sum#9]
Results [3]: [i_category#8, i_class#7, sum#10]

(14) RowToColumnar
Input [3]: [i_category#8, i_class#7, sum#10]

(15) CometColumnarExchange
Input [3]: [i_category#8, i_class#7, sum#10]
Arguments: hashpartitioning(i_category#8, i_class#7, 5), ENSURE_REQUIREMENTS, CometColumnarShuffle, [plan_id=2]

(16) CometHashAggregate
Input [3]: [i_category#8, i_class#7, sum#10]
Keys [2]: [i_category#8, i_class#7]
Functions [1]: [sum(UnscaledValue(ws_net_paid#2))]

(17) ReusedExchange [Reuses operator id: 15]
Output [3]: [i_category#8, i_class#7, sum#11]

(18) CometHashAggregate
Input [3]: [i_category#8, i_class#7, sum#11]
Keys [2]: [i_category#8, i_class#7]
Functions [1]: [sum(UnscaledValue(ws_net_paid#2))]

(19) CometHashAggregate
Input [2]: [total_sum#12, i_category#8]
Keys [1]: [i_category#8]
Functions [1]: [partial_sum(total_sum#12)]

(20) CometColumnarExchange
Input [3]: [i_category#8, sum#13, isEmpty#14]
Arguments: hashpartitioning(i_category#8, 5), ENSURE_REQUIREMENTS, CometColumnarShuffle, [plan_id=3]

(21) CometHashAggregate
Input [3]: [i_category#8, sum#13, isEmpty#14]
Keys [1]: [i_category#8]
Functions [1]: [sum(total_sum#12)]

(22) ReusedExchange [Reuses operator id: 15]
Output [3]: [i_category#8, i_class#7, sum#15]

(23) CometHashAggregate
Input [3]: [i_category#8, i_class#7, sum#15]
Keys [2]: [i_category#8, i_class#7]
Functions [1]: [sum(UnscaledValue(ws_net_paid#2))]

(24) CometHashAggregate
Input [1]: [total_sum#12]
Keys: []
Functions [1]: [partial_sum(total_sum#12)]

(25) CometColumnarExchange
Input [2]: [sum#16, isEmpty#17]
Arguments: SinglePartition, ENSURE_REQUIREMENTS, CometColumnarShuffle, [plan_id=4]

(26) CometHashAggregate
Input [2]: [sum#16, isEmpty#17]
Keys: []
Functions [1]: [sum(total_sum#12)]

(27) CometUnion
Child 0 Input [6]: [total_sum#18, i_category#8, i_class#7, g_category#19, g_class#20, lochierarchy#21]
Child 1 Input [6]: [total_sum#22, i_category#8, i_class#23, g_category#24, g_class#25, lochierarchy#26]
Child 2 Input [6]: [total_sum#27, i_category#28, i_class#29, g_category#30, g_class#31, lochierarchy#32]

(28) CometHashAggregate
Input [6]: [total_sum#18, i_category#8, i_class#7, g_category#19, g_class#20, lochierarchy#21]
Keys [6]: [total_sum#18, i_category#8, i_class#7, g_category#19, g_class#20, lochierarchy#21]
Functions: []

(29) CometColumnarExchange
Input [6]: [total_sum#18, i_category#8, i_class#7, g_category#19, g_class#20, lochierarchy#21]
Arguments: hashpartitioning(total_sum#18, i_category#8, i_class#7, g_category#19, g_class#20, lochierarchy#21, 5), ENSURE_REQUIREMENTS, CometColumnarShuffle, [plan_id=5]

(30) CometHashAggregate
Input [6]: [total_sum#18, i_category#8, i_class#7, g_category#19, g_class#20, lochierarchy#21]
Keys [6]: [total_sum#18, i_category#8, i_class#7, g_category#19, g_class#20, lochierarchy#21]
Functions: []

(31) CometColumnarExchange
Input [5]: [total_sum#18, i_category#8, i_class#7, lochierarchy#21, _w0#33]
Arguments: hashpartitioning(lochierarchy#21, _w0#33, 5), ENSURE_REQUIREMENTS, CometColumnarShuffle, [plan_id=6]

(32) CometSort
Input [5]: [total_sum#18, i_category#8, i_class#7, lochierarchy#21, _w0#33]
Arguments: [total_sum#18, i_category#8, i_class#7, lochierarchy#21, _w0#33], [lochierarchy#21 ASC NULLS FIRST, _w0#33 ASC NULLS FIRST, total_sum#18 DESC NULLS LAST]

(33) ColumnarToRow [codegen id : 10]
Input [5]: [total_sum#18, i_category#8, i_class#7, lochierarchy#21, _w0#33]

(34) Window
Input [5]: [total_sum#18, i_category#8, i_class#7, lochierarchy#21, _w0#33]
Arguments: [rank(total_sum#18) windowspecdefinition(lochierarchy#21, _w0#33, total_sum#18 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rank_within_parent#34], [lochierarchy#21, _w0#33], [total_sum#18 DESC NULLS LAST]

(35) Project [codegen id : 11]
Output [5]: [total_sum#18, i_category#8, i_class#7, lochierarchy#21, rank_within_parent#34]
Input [6]: [total_sum#18, i_category#8, i_class#7, lochierarchy#21, _w0#33, rank_within_parent#34]

(36) TakeOrderedAndProject
Input [5]: [total_sum#18, i_category#8, i_class#7, lochierarchy#21, rank_within_parent#34]
Arguments: 100, [lochierarchy#21 DESC NULLS LAST, CASE WHEN (lochierarchy#21 = 0) THEN i_category#8 END ASC NULLS FIRST, rank_within_parent#34 ASC NULLS FIRST], [total_sum#18, i_category#8, i_class#7, lochierarchy#21, rank_within_parent#34]

===== Subqueries =====

Subquery:1 Hosting operator id = 1 Hosting Expression = ws_sold_date_sk#3 IN dynamicpruning#4
BroadcastExchange (41)
+- * ColumnarToRow (40)
   +- CometProject (39)
      +- CometFilter (38)
         +- CometScan parquet spark_catalog.default.date_dim (37)


(unknown) Scan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#5, d_month_seq#35]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1212), LessThanOrEqual(d_month_seq,1223), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_month_seq:int>

(38) CometFilter
Input [2]: [d_date_sk#5, d_month_seq#35]
Condition : (((isnotnull(d_month_seq#35) AND (d_month_seq#35 >= 1212)) AND (d_month_seq#35 <= 1223)) AND isnotnull(d_date_sk#5))

(39) CometProject
Input [2]: [d_date_sk#5, d_month_seq#35]
Arguments: [d_date_sk#5], [d_date_sk#5]

(40) ColumnarToRow [codegen id : 1]
Input [1]: [d_date_sk#5]

(41) BroadcastExchange
Input [1]: [d_date_sk#5]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=7]


