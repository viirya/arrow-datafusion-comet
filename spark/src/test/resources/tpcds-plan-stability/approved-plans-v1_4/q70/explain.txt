== Physical Plan ==
TakeOrderedAndProject (46)
+- * Project (45)
   +- Window (44)
      +- * ColumnarToRow (43)
         +- CometSort (42)
            +- CometColumnarExchange (41)
               +- CometHashAggregate (40)
                  +- CometColumnarExchange (39)
                     +- RowToColumnar (38)
                        +- * HashAggregate (37)
                           +- * Expand (36)
                              +- * Project (35)
                                 +- * BroadcastHashJoin Inner BuildRight (34)
                                    :- * Project (6)
                                    :  +- * BroadcastHashJoin Inner BuildRight (5)
                                    :     :- * ColumnarToRow (3)
                                    :     :  +- CometFilter (2)
                                    :     :     +- CometScan parquet spark_catalog.default.store_sales (1)
                                    :     +- ReusedExchange (4)
                                    +- BroadcastExchange (33)
                                       +- * BroadcastHashJoin LeftSemi BuildRight (32)
                                          :- * ColumnarToRow (9)
                                          :  +- CometFilter (8)
                                          :     +- CometScan parquet spark_catalog.default.store (7)
                                          +- BroadcastExchange (31)
                                             +- * Project (30)
                                                +- * Filter (29)
                                                   +- Window (28)
                                                      +- * ColumnarToRow (27)
                                                         +- CometSort (26)
                                                            +- CometHashAggregate (25)
                                                               +- CometColumnarExchange (24)
                                                                  +- RowToColumnar (23)
                                                                     +- * HashAggregate (22)
                                                                        +- * Project (21)
                                                                           +- * BroadcastHashJoin Inner BuildRight (20)
                                                                              :- * Project (18)
                                                                              :  +- * BroadcastHashJoin Inner BuildRight (17)
                                                                              :     :- * ColumnarToRow (12)
                                                                              :     :  +- CometFilter (11)
                                                                              :     :     +- CometScan parquet spark_catalog.default.store_sales (10)
                                                                              :     +- BroadcastExchange (16)
                                                                              :        +- * ColumnarToRow (15)
                                                                              :           +- CometFilter (14)
                                                                              :              +- CometScan parquet spark_catalog.default.store (13)
                                                                              +- ReusedExchange (19)


(unknown) Scan parquet spark_catalog.default.store_sales
Output [3]: [ss_store_sk#1, ss_net_profit#2, ss_sold_date_sk#3]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ss_sold_date_sk#3), dynamicpruningexpression(ss_sold_date_sk#3 IN dynamicpruning#4)]
PushedFilters: [IsNotNull(ss_store_sk)]
ReadSchema: struct<ss_store_sk:int,ss_net_profit:decimal(7,2)>

(2) CometFilter
Input [3]: [ss_store_sk#1, ss_net_profit#2, ss_sold_date_sk#3]
Condition : isnotnull(ss_store_sk#1)

(3) ColumnarToRow [codegen id : 8]
Input [3]: [ss_store_sk#1, ss_net_profit#2, ss_sold_date_sk#3]

(4) ReusedExchange [Reuses operator id: 51]
Output [1]: [d_date_sk#5]

(5) BroadcastHashJoin [codegen id : 8]
Left keys [1]: [ss_sold_date_sk#3]
Right keys [1]: [d_date_sk#5]
Join type: Inner
Join condition: None

(6) Project [codegen id : 8]
Output [2]: [ss_store_sk#1, ss_net_profit#2]
Input [4]: [ss_store_sk#1, ss_net_profit#2, ss_sold_date_sk#3, d_date_sk#5]

(unknown) Scan parquet spark_catalog.default.store
Output [3]: [s_store_sk#6, s_county#7, s_state#8]
Batched: true
Location [not included in comparison]/{warehouse_dir}/store]
PushedFilters: [IsNotNull(s_store_sk)]
ReadSchema: struct<s_store_sk:int,s_county:string,s_state:string>

(8) CometFilter
Input [3]: [s_store_sk#6, s_county#7, s_state#8]
Condition : isnotnull(s_store_sk#6)

(9) ColumnarToRow [codegen id : 7]
Input [3]: [s_store_sk#6, s_county#7, s_state#8]

(unknown) Scan parquet spark_catalog.default.store_sales
Output [3]: [ss_store_sk#9, ss_net_profit#10, ss_sold_date_sk#11]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ss_sold_date_sk#11), dynamicpruningexpression(ss_sold_date_sk#11 IN dynamicpruning#12)]
PushedFilters: [IsNotNull(ss_store_sk)]
ReadSchema: struct<ss_store_sk:int,ss_net_profit:decimal(7,2)>

(11) CometFilter
Input [3]: [ss_store_sk#9, ss_net_profit#10, ss_sold_date_sk#11]
Condition : isnotnull(ss_store_sk#9)

(12) ColumnarToRow [codegen id : 4]
Input [3]: [ss_store_sk#9, ss_net_profit#10, ss_sold_date_sk#11]

(unknown) Scan parquet spark_catalog.default.store
Output [2]: [s_store_sk#13, s_state#14]
Batched: true
Location [not included in comparison]/{warehouse_dir}/store]
PushedFilters: [IsNotNull(s_store_sk)]
ReadSchema: struct<s_store_sk:int,s_state:string>

(14) CometFilter
Input [2]: [s_store_sk#13, s_state#14]
Condition : isnotnull(s_store_sk#13)

(15) ColumnarToRow [codegen id : 2]
Input [2]: [s_store_sk#13, s_state#14]

(16) BroadcastExchange
Input [2]: [s_store_sk#13, s_state#14]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1]

(17) BroadcastHashJoin [codegen id : 4]
Left keys [1]: [ss_store_sk#9]
Right keys [1]: [s_store_sk#13]
Join type: Inner
Join condition: None

(18) Project [codegen id : 4]
Output [3]: [ss_net_profit#10, ss_sold_date_sk#11, s_state#14]
Input [5]: [ss_store_sk#9, ss_net_profit#10, ss_sold_date_sk#11, s_store_sk#13, s_state#14]

(19) ReusedExchange [Reuses operator id: 51]
Output [1]: [d_date_sk#15]

(20) BroadcastHashJoin [codegen id : 4]
Left keys [1]: [ss_sold_date_sk#11]
Right keys [1]: [d_date_sk#15]
Join type: Inner
Join condition: None

(21) Project [codegen id : 4]
Output [2]: [ss_net_profit#10, s_state#14]
Input [4]: [ss_net_profit#10, ss_sold_date_sk#11, s_state#14, d_date_sk#15]

(22) HashAggregate [codegen id : 4]
Input [2]: [ss_net_profit#10, s_state#14]
Keys [1]: [s_state#14]
Functions [1]: [partial_sum(UnscaledValue(ss_net_profit#10))]
Aggregate Attributes [1]: [sum#16]
Results [2]: [s_state#14, sum#17]

(23) RowToColumnar
Input [2]: [s_state#14, sum#17]

(24) CometColumnarExchange
Input [2]: [s_state#14, sum#17]
Arguments: hashpartitioning(s_state#14, 5), ENSURE_REQUIREMENTS, CometColumnarShuffle, [plan_id=2]

(25) CometHashAggregate
Input [2]: [s_state#14, sum#17]
Keys [1]: [s_state#14]
Functions [1]: [sum(UnscaledValue(ss_net_profit#10))]

(26) CometSort
Input [3]: [s_state#14, _w0#18, s_state#14]
Arguments: [s_state#14, _w0#18, s_state#14], [s_state#14 ASC NULLS FIRST, _w0#18 DESC NULLS LAST]

(27) ColumnarToRow [codegen id : 5]
Input [3]: [s_state#14, _w0#18, s_state#14]

(28) Window
Input [3]: [s_state#14, _w0#18, s_state#14]
Arguments: [rank(_w0#18) windowspecdefinition(s_state#14, _w0#18 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS ranking#19], [s_state#14], [_w0#18 DESC NULLS LAST]

(29) Filter [codegen id : 6]
Input [4]: [s_state#14, _w0#18, s_state#14, ranking#19]
Condition : (ranking#19 <= 5)

(30) Project [codegen id : 6]
Output [1]: [s_state#14]
Input [4]: [s_state#14, _w0#18, s_state#14, ranking#19]

(31) BroadcastExchange
Input [1]: [s_state#14]
Arguments: HashedRelationBroadcastMode(List(input[0, string, true]),false), [plan_id=3]

(32) BroadcastHashJoin [codegen id : 7]
Left keys [1]: [s_state#8]
Right keys [1]: [s_state#14]
Join type: LeftSemi
Join condition: None

(33) BroadcastExchange
Input [3]: [s_store_sk#6, s_county#7, s_state#8]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=4]

(34) BroadcastHashJoin [codegen id : 8]
Left keys [1]: [ss_store_sk#1]
Right keys [1]: [s_store_sk#6]
Join type: Inner
Join condition: None

(35) Project [codegen id : 8]
Output [3]: [ss_net_profit#2, s_state#8, s_county#7]
Input [5]: [ss_store_sk#1, ss_net_profit#2, s_store_sk#6, s_county#7, s_state#8]

(36) Expand [codegen id : 8]
Input [3]: [ss_net_profit#2, s_state#8, s_county#7]
Arguments: [[ss_net_profit#2, s_state#8, s_county#7, 0], [ss_net_profit#2, s_state#8, null, 1], [ss_net_profit#2, null, null, 3]], [ss_net_profit#2, s_state#20, s_county#21, spark_grouping_id#22]

(37) HashAggregate [codegen id : 8]
Input [4]: [ss_net_profit#2, s_state#20, s_county#21, spark_grouping_id#22]
Keys [3]: [s_state#20, s_county#21, spark_grouping_id#22]
Functions [1]: [partial_sum(UnscaledValue(ss_net_profit#2))]
Aggregate Attributes [1]: [sum#23]
Results [4]: [s_state#20, s_county#21, spark_grouping_id#22, sum#24]

(38) RowToColumnar
Input [4]: [s_state#20, s_county#21, spark_grouping_id#22, sum#24]

(39) CometColumnarExchange
Input [4]: [s_state#20, s_county#21, spark_grouping_id#22, sum#24]
Arguments: hashpartitioning(s_state#20, s_county#21, spark_grouping_id#22, 5), ENSURE_REQUIREMENTS, CometColumnarShuffle, [plan_id=5]

(40) CometHashAggregate
Input [4]: [s_state#20, s_county#21, spark_grouping_id#22, sum#24]
Keys [3]: [s_state#20, s_county#21, spark_grouping_id#22]
Functions [1]: [sum(UnscaledValue(ss_net_profit#2))]

(41) CometColumnarExchange
Input [7]: [total_sum#25, s_state#20, s_county#21, lochierarchy#26, _w0#27, _w1#28, _w2#29]
Arguments: hashpartitioning(_w1#28, _w2#29, 5), ENSURE_REQUIREMENTS, CometColumnarShuffle, [plan_id=6]

(42) CometSort
Input [7]: [total_sum#25, s_state#20, s_county#21, lochierarchy#26, _w0#27, _w1#28, _w2#29]
Arguments: [total_sum#25, s_state#20, s_county#21, lochierarchy#26, _w0#27, _w1#28, _w2#29], [_w1#28 ASC NULLS FIRST, _w2#29 ASC NULLS FIRST, _w0#27 DESC NULLS LAST]

(43) ColumnarToRow [codegen id : 9]
Input [7]: [total_sum#25, s_state#20, s_county#21, lochierarchy#26, _w0#27, _w1#28, _w2#29]

(44) Window
Input [7]: [total_sum#25, s_state#20, s_county#21, lochierarchy#26, _w0#27, _w1#28, _w2#29]
Arguments: [rank(_w0#27) windowspecdefinition(_w1#28, _w2#29, _w0#27 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rank_within_parent#30], [_w1#28, _w2#29], [_w0#27 DESC NULLS LAST]

(45) Project [codegen id : 10]
Output [5]: [total_sum#25, s_state#20, s_county#21, lochierarchy#26, rank_within_parent#30]
Input [8]: [total_sum#25, s_state#20, s_county#21, lochierarchy#26, _w0#27, _w1#28, _w2#29, rank_within_parent#30]

(46) TakeOrderedAndProject
Input [5]: [total_sum#25, s_state#20, s_county#21, lochierarchy#26, rank_within_parent#30]
Arguments: 100, [lochierarchy#26 DESC NULLS LAST, CASE WHEN (lochierarchy#26 = 0) THEN s_state#20 END ASC NULLS FIRST, rank_within_parent#30 ASC NULLS FIRST], [total_sum#25, s_state#20, s_county#21, lochierarchy#26, rank_within_parent#30]

===== Subqueries =====

Subquery:1 Hosting operator id = 1 Hosting Expression = ss_sold_date_sk#3 IN dynamicpruning#4
BroadcastExchange (51)
+- * ColumnarToRow (50)
   +- CometProject (49)
      +- CometFilter (48)
         +- CometScan parquet spark_catalog.default.date_dim (47)


(unknown) Scan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#5, d_month_seq#31]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1200), LessThanOrEqual(d_month_seq,1211), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_month_seq:int>

(48) CometFilter
Input [2]: [d_date_sk#5, d_month_seq#31]
Condition : (((isnotnull(d_month_seq#31) AND (d_month_seq#31 >= 1200)) AND (d_month_seq#31 <= 1211)) AND isnotnull(d_date_sk#5))

(49) CometProject
Input [2]: [d_date_sk#5, d_month_seq#31]
Arguments: [d_date_sk#5], [d_date_sk#5]

(50) ColumnarToRow [codegen id : 1]
Input [1]: [d_date_sk#5]

(51) BroadcastExchange
Input [1]: [d_date_sk#5]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=7]

Subquery:2 Hosting operator id = 10 Hosting Expression = ss_sold_date_sk#11 IN dynamicpruning#4


