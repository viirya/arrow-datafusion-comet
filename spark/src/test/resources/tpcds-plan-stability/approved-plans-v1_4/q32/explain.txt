== Physical Plan ==
* ColumnarToRow (33)
+- CometHashAggregate (32)
   +- CometColumnarExchange (31)
      +- RowToColumnar (30)
         +- * HashAggregate (29)
            +- * Project (28)
               +- * BroadcastHashJoin Inner BuildRight (27)
                  :- * Project (25)
                  :  +- * BroadcastHashJoin Inner BuildRight (24)
                  :     :- * Project (10)
                  :     :  +- * BroadcastHashJoin Inner BuildRight (9)
                  :     :     :- * ColumnarToRow (3)
                  :     :     :  +- CometFilter (2)
                  :     :     :     +- CometScan parquet spark_catalog.default.catalog_sales (1)
                  :     :     +- BroadcastExchange (8)
                  :     :        +- * ColumnarToRow (7)
                  :     :           +- CometProject (6)
                  :     :              +- CometFilter (5)
                  :     :                 +- CometScan parquet spark_catalog.default.item (4)
                  :     +- BroadcastExchange (23)
                  :        +- * ColumnarToRow (22)
                  :           +- CometFilter (21)
                  :              +- CometHashAggregate (20)
                  :                 +- CometColumnarExchange (19)
                  :                    +- RowToColumnar (18)
                  :                       +- * HashAggregate (17)
                  :                          +- * Project (16)
                  :                             +- * BroadcastHashJoin Inner BuildRight (15)
                  :                                :- * ColumnarToRow (13)
                  :                                :  +- CometFilter (12)
                  :                                :     +- CometScan parquet spark_catalog.default.catalog_sales (11)
                  :                                +- ReusedExchange (14)
                  +- ReusedExchange (26)


(unknown) Scan parquet spark_catalog.default.catalog_sales
Output [3]: [cs_item_sk#1, cs_ext_discount_amt#2, cs_sold_date_sk#3]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(cs_sold_date_sk#3), dynamicpruningexpression(cs_sold_date_sk#3 IN dynamicpruning#4)]
PushedFilters: [IsNotNull(cs_item_sk), IsNotNull(cs_ext_discount_amt)]
ReadSchema: struct<cs_item_sk:int,cs_ext_discount_amt:decimal(7,2)>

(2) CometFilter
Input [3]: [cs_item_sk#1, cs_ext_discount_amt#2, cs_sold_date_sk#3]
Condition : (isnotnull(cs_item_sk#1) AND isnotnull(cs_ext_discount_amt#2))

(3) ColumnarToRow [codegen id : 6]
Input [3]: [cs_item_sk#1, cs_ext_discount_amt#2, cs_sold_date_sk#3]

(unknown) Scan parquet spark_catalog.default.item
Output [2]: [i_item_sk#5, i_manufact_id#6]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_manufact_id), EqualTo(i_manufact_id,977), IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_manufact_id:int>

(5) CometFilter
Input [2]: [i_item_sk#5, i_manufact_id#6]
Condition : ((isnotnull(i_manufact_id#6) AND (i_manufact_id#6 = 977)) AND isnotnull(i_item_sk#5))

(6) CometProject
Input [2]: [i_item_sk#5, i_manufact_id#6]
Arguments: [i_item_sk#5], [i_item_sk#5]

(7) ColumnarToRow [codegen id : 1]
Input [1]: [i_item_sk#5]

(8) BroadcastExchange
Input [1]: [i_item_sk#5]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1]

(9) BroadcastHashJoin [codegen id : 6]
Left keys [1]: [cs_item_sk#1]
Right keys [1]: [i_item_sk#5]
Join type: Inner
Join condition: None

(10) Project [codegen id : 6]
Output [3]: [cs_ext_discount_amt#2, cs_sold_date_sk#3, i_item_sk#5]
Input [4]: [cs_item_sk#1, cs_ext_discount_amt#2, cs_sold_date_sk#3, i_item_sk#5]

(unknown) Scan parquet spark_catalog.default.catalog_sales
Output [3]: [cs_item_sk#7, cs_ext_discount_amt#8, cs_sold_date_sk#9]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(cs_sold_date_sk#9), dynamicpruningexpression(cs_sold_date_sk#9 IN dynamicpruning#10)]
PushedFilters: [IsNotNull(cs_item_sk)]
ReadSchema: struct<cs_item_sk:int,cs_ext_discount_amt:decimal(7,2)>

(12) CometFilter
Input [3]: [cs_item_sk#7, cs_ext_discount_amt#8, cs_sold_date_sk#9]
Condition : isnotnull(cs_item_sk#7)

(13) ColumnarToRow [codegen id : 3]
Input [3]: [cs_item_sk#7, cs_ext_discount_amt#8, cs_sold_date_sk#9]

(14) ReusedExchange [Reuses operator id: 38]
Output [1]: [d_date_sk#11]

(15) BroadcastHashJoin [codegen id : 3]
Left keys [1]: [cs_sold_date_sk#9]
Right keys [1]: [d_date_sk#11]
Join type: Inner
Join condition: None

(16) Project [codegen id : 3]
Output [2]: [cs_item_sk#7, cs_ext_discount_amt#8]
Input [4]: [cs_item_sk#7, cs_ext_discount_amt#8, cs_sold_date_sk#9, d_date_sk#11]

(17) HashAggregate [codegen id : 3]
Input [2]: [cs_item_sk#7, cs_ext_discount_amt#8]
Keys [1]: [cs_item_sk#7]
Functions [1]: [partial_avg(UnscaledValue(cs_ext_discount_amt#8))]
Aggregate Attributes [2]: [sum#12, count#13]
Results [3]: [cs_item_sk#7, sum#14, count#15]

(18) RowToColumnar
Input [3]: [cs_item_sk#7, sum#14, count#15]

(19) CometColumnarExchange
Input [3]: [cs_item_sk#7, sum#14, count#15]
Arguments: hashpartitioning(cs_item_sk#7, 5), ENSURE_REQUIREMENTS, CometColumnarShuffle, [plan_id=2]

(20) CometHashAggregate
Input [3]: [cs_item_sk#7, sum#14, count#15]
Keys [1]: [cs_item_sk#7]
Functions [1]: [avg(UnscaledValue(cs_ext_discount_amt#8))]

(21) CometFilter
Input [2]: [(1.3 * avg(cs_ext_discount_amt))#16, cs_item_sk#7]
Condition : isnotnull((1.3 * avg(cs_ext_discount_amt))#16)

(22) ColumnarToRow [codegen id : 4]
Input [2]: [(1.3 * avg(cs_ext_discount_amt))#16, cs_item_sk#7]

(23) BroadcastExchange
Input [2]: [(1.3 * avg(cs_ext_discount_amt))#16, cs_item_sk#7]
Arguments: HashedRelationBroadcastMode(List(cast(input[1, int, true] as bigint)),false), [plan_id=3]

(24) BroadcastHashJoin [codegen id : 6]
Left keys [1]: [i_item_sk#5]
Right keys [1]: [cs_item_sk#7]
Join type: Inner
Join condition: (cast(cs_ext_discount_amt#2 as decimal(14,7)) > (1.3 * avg(cs_ext_discount_amt))#16)

(25) Project [codegen id : 6]
Output [2]: [cs_ext_discount_amt#2, cs_sold_date_sk#3]
Input [5]: [cs_ext_discount_amt#2, cs_sold_date_sk#3, i_item_sk#5, (1.3 * avg(cs_ext_discount_amt))#16, cs_item_sk#7]

(26) ReusedExchange [Reuses operator id: 38]
Output [1]: [d_date_sk#17]

(27) BroadcastHashJoin [codegen id : 6]
Left keys [1]: [cs_sold_date_sk#3]
Right keys [1]: [d_date_sk#17]
Join type: Inner
Join condition: None

(28) Project [codegen id : 6]
Output [1]: [cs_ext_discount_amt#2]
Input [3]: [cs_ext_discount_amt#2, cs_sold_date_sk#3, d_date_sk#17]

(29) HashAggregate [codegen id : 6]
Input [1]: [cs_ext_discount_amt#2]
Keys: []
Functions [1]: [partial_sum(UnscaledValue(cs_ext_discount_amt#2))]
Aggregate Attributes [1]: [sum#18]
Results [1]: [sum#19]

(30) RowToColumnar
Input [1]: [sum#19]

(31) CometColumnarExchange
Input [1]: [sum#19]
Arguments: SinglePartition, ENSURE_REQUIREMENTS, CometColumnarShuffle, [plan_id=4]

(32) CometHashAggregate
Input [1]: [sum#19]
Keys: []
Functions [1]: [sum(UnscaledValue(cs_ext_discount_amt#2))]

(33) ColumnarToRow [codegen id : 7]
Input [1]: [excess discount amount#20]

===== Subqueries =====

Subquery:1 Hosting operator id = 1 Hosting Expression = cs_sold_date_sk#3 IN dynamicpruning#4
BroadcastExchange (38)
+- * ColumnarToRow (37)
   +- CometProject (36)
      +- CometFilter (35)
         +- CometScan parquet spark_catalog.default.date_dim (34)


(unknown) Scan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#17, d_date#21]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,2000-01-27), LessThanOrEqual(d_date,2000-04-26), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_date:date>

(35) CometFilter
Input [2]: [d_date_sk#17, d_date#21]
Condition : (((isnotnull(d_date#21) AND (d_date#21 >= 2000-01-27)) AND (d_date#21 <= 2000-04-26)) AND isnotnull(d_date_sk#17))

(36) CometProject
Input [2]: [d_date_sk#17, d_date#21]
Arguments: [d_date_sk#17], [d_date_sk#17]

(37) ColumnarToRow [codegen id : 1]
Input [1]: [d_date_sk#17]

(38) BroadcastExchange
Input [1]: [d_date_sk#17]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=5]

Subquery:2 Hosting operator id = 11 Hosting Expression = cs_sold_date_sk#9 IN dynamicpruning#4


